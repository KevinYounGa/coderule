<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="coderule1.dal.dao.CodeLittleruleMapper" >
  <resultMap id="BaseResultMap" type="coderule1.dal.model.CodeLittlerule" >
    <id column="littleRuleid" property="littleruleid" jdbcType="INTEGER" />
    <result column="littleRuleName" property="littlerulename" jdbcType="VARCHAR" />
    <result column="fkBigRule" property="fkbigrule" jdbcType="INTEGER" />
    <result column="fkTargetId" property="fktargetid" jdbcType="INTEGER" />
    <result column="typeClass" property="typeclass" jdbcType="VARCHAR" />
    <result column="conditionalValue" property="conditionalvalue" jdbcType="VARCHAR" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="spacer" property="spacer" jdbcType="VARCHAR" />
    <result column="param" property="param" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    littleRuleid, littleRuleName, fkBigRule, fkTargetId, typeClass, conditionalValue, 
    seq, spacer, param
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="coderule1.dal.model.CodeLittleruleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from code_littlerule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from code_littlerule
    where littleRuleid = #{littleruleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from code_littlerule
    where littleRuleid = #{littleruleid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="coderule1.dal.model.CodeLittleruleExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from code_littlerule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="coderule1.dal.model.CodeLittlerule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into code_littlerule (littleRuleid, littleRuleName, fkBigRule, 
      fkTargetId, typeClass, conditionalValue, 
      seq, spacer, param)
    values (#{littleruleid,jdbcType=INTEGER}, #{littlerulename,jdbcType=VARCHAR}, #{fkbigrule,jdbcType=INTEGER}, 
      #{fktargetid,jdbcType=INTEGER}, #{typeclass,jdbcType=VARCHAR}, #{conditionalvalue,jdbcType=VARCHAR}, 
      #{seq,jdbcType=INTEGER}, #{spacer,jdbcType=VARCHAR}, #{param,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="coderule1.dal.model.CodeLittlerule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into code_littlerule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="littleruleid != null" >
        littleRuleid,
      </if>
      <if test="littlerulename != null" >
        littleRuleName,
      </if>
      <if test="fkbigrule != null" >
        fkBigRule,
      </if>
      <if test="fktargetid != null" >
        fkTargetId,
      </if>
      <if test="typeclass != null" >
        typeClass,
      </if>
      <if test="conditionalvalue != null" >
        conditionalValue,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="spacer != null" >
        spacer,
      </if>
      <if test="param != null" >
        param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="littleruleid != null" >
        #{littleruleid,jdbcType=INTEGER},
      </if>
      <if test="littlerulename != null" >
        #{littlerulename,jdbcType=VARCHAR},
      </if>
      <if test="fkbigrule != null" >
        #{fkbigrule,jdbcType=INTEGER},
      </if>
      <if test="fktargetid != null" >
        #{fktargetid,jdbcType=INTEGER},
      </if>
      <if test="typeclass != null" >
        #{typeclass,jdbcType=VARCHAR},
      </if>
      <if test="conditionalvalue != null" >
        #{conditionalvalue,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="spacer != null" >
        #{spacer,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        #{param,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="coderule1.dal.model.CodeLittleruleExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from code_littlerule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_littlerule
    <set >
      <if test="record.littleruleid != null" >
        littleRuleid = #{record.littleruleid,jdbcType=INTEGER},
      </if>
      <if test="record.littlerulename != null" >
        littleRuleName = #{record.littlerulename,jdbcType=VARCHAR},
      </if>
      <if test="record.fkbigrule != null" >
        fkBigRule = #{record.fkbigrule,jdbcType=INTEGER},
      </if>
      <if test="record.fktargetid != null" >
        fkTargetId = #{record.fktargetid,jdbcType=INTEGER},
      </if>
      <if test="record.typeclass != null" >
        typeClass = #{record.typeclass,jdbcType=VARCHAR},
      </if>
      <if test="record.conditionalvalue != null" >
        conditionalValue = #{record.conditionalvalue,jdbcType=VARCHAR},
      </if>
      <if test="record.seq != null" >
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.spacer != null" >
        spacer = #{record.spacer,jdbcType=VARCHAR},
      </if>
      <if test="record.param != null" >
        param = #{record.param,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_littlerule
    set littleRuleid = #{record.littleruleid,jdbcType=INTEGER},
      littleRuleName = #{record.littlerulename,jdbcType=VARCHAR},
      fkBigRule = #{record.fkbigrule,jdbcType=INTEGER},
      fkTargetId = #{record.fktargetid,jdbcType=INTEGER},
      typeClass = #{record.typeclass,jdbcType=VARCHAR},
      conditionalValue = #{record.conditionalvalue,jdbcType=VARCHAR},
      seq = #{record.seq,jdbcType=INTEGER},
      spacer = #{record.spacer,jdbcType=VARCHAR},
      param = #{record.param,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="coderule1.dal.model.CodeLittlerule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_littlerule
    <set >
      <if test="littlerulename != null" >
        littleRuleName = #{littlerulename,jdbcType=VARCHAR},
      </if>
      <if test="fkbigrule != null" >
        fkBigRule = #{fkbigrule,jdbcType=INTEGER},
      </if>
      <if test="fktargetid != null" >
        fkTargetId = #{fktargetid,jdbcType=INTEGER},
      </if>
      <if test="typeclass != null" >
        typeClass = #{typeclass,jdbcType=VARCHAR},
      </if>
      <if test="conditionalvalue != null" >
        conditionalValue = #{conditionalvalue,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="spacer != null" >
        spacer = #{spacer,jdbcType=VARCHAR},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=VARCHAR},
      </if>
    </set>
    where littleRuleid = #{littleruleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="coderule1.dal.model.CodeLittlerule" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update code_littlerule
    set littleRuleName = #{littlerulename,jdbcType=VARCHAR},
      fkBigRule = #{fkbigrule,jdbcType=INTEGER},
      fkTargetId = #{fktargetid,jdbcType=INTEGER},
      typeClass = #{typeclass,jdbcType=VARCHAR},
      conditionalValue = #{conditionalvalue,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=INTEGER},
      spacer = #{spacer,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR}
    where littleRuleid = #{littleruleid,jdbcType=INTEGER}
  </update>

  <update id="updateSeqByPrimaryKey">
    update code_littlerule set seq=#{seqValue} where littleRuleid=#{littleruleid}
  </update>
  <select id="getIdWithExplain" resultType="java.util.HashMap">
    select littleRuleId,LittleRuleName from code_littlerule where littleRuleId in ${inSql}
  </select>

  <select id="getLittleRuleByClass" resultMap="BaseResultMap">
    select * from code_littlerule where typeClass like '%${typeClass}%'
  </select>

  <select id="getSeqByPrimaryKey" parameterType="java.lang.Integer" resultType="java.util.HashMap">
    select seq,spacer,conditionalvalue from code_littlerule where littleRuleid=#{littleruleid}
  </select>

</mapper>