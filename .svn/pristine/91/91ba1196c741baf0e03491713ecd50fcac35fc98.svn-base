package coderule1.dal.model;

import java.util.ArrayList;
import java.util.List;

public class CodeLittleruleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public CodeLittleruleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLittleruleidIsNull() {
            addCriterion("littleRuleid is null");
            return (Criteria) this;
        }

        public Criteria andLittleruleidIsNotNull() {
            addCriterion("littleRuleid is not null");
            return (Criteria) this;
        }

        public Criteria andLittleruleidEqualTo(Integer value) {
            addCriterion("littleRuleid =", value, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidNotEqualTo(Integer value) {
            addCriterion("littleRuleid <>", value, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidGreaterThan(Integer value) {
            addCriterion("littleRuleid >", value, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidGreaterThanOrEqualTo(Integer value) {
            addCriterion("littleRuleid >=", value, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidLessThan(Integer value) {
            addCriterion("littleRuleid <", value, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidLessThanOrEqualTo(Integer value) {
            addCriterion("littleRuleid <=", value, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidIn(List<Integer> values) {
            addCriterion("littleRuleid in", values, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidNotIn(List<Integer> values) {
            addCriterion("littleRuleid not in", values, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidBetween(Integer value1, Integer value2) {
            addCriterion("littleRuleid between", value1, value2, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittleruleidNotBetween(Integer value1, Integer value2) {
            addCriterion("littleRuleid not between", value1, value2, "littleruleid");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameIsNull() {
            addCriterion("littleRuleName is null");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameIsNotNull() {
            addCriterion("littleRuleName is not null");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameEqualTo(String value) {
            addCriterion("littleRuleName =", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameNotEqualTo(String value) {
            addCriterion("littleRuleName <>", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameGreaterThan(String value) {
            addCriterion("littleRuleName >", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameGreaterThanOrEqualTo(String value) {
            addCriterion("littleRuleName >=", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameLessThan(String value) {
            addCriterion("littleRuleName <", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameLessThanOrEqualTo(String value) {
            addCriterion("littleRuleName <=", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameLike(String value) {
            addCriterion("littleRuleName like", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameNotLike(String value) {
            addCriterion("littleRuleName not like", value, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameIn(List<String> values) {
            addCriterion("littleRuleName in", values, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameNotIn(List<String> values) {
            addCriterion("littleRuleName not in", values, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameBetween(String value1, String value2) {
            addCriterion("littleRuleName between", value1, value2, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andLittlerulenameNotBetween(String value1, String value2) {
            addCriterion("littleRuleName not between", value1, value2, "littlerulename");
            return (Criteria) this;
        }

        public Criteria andFkbigruleIsNull() {
            addCriterion("fkBigRule is null");
            return (Criteria) this;
        }

        public Criteria andFkbigruleIsNotNull() {
            addCriterion("fkBigRule is not null");
            return (Criteria) this;
        }

        public Criteria andFkbigruleEqualTo(Integer value) {
            addCriterion("fkBigRule =", value, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleNotEqualTo(Integer value) {
            addCriterion("fkBigRule <>", value, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleGreaterThan(Integer value) {
            addCriterion("fkBigRule >", value, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleGreaterThanOrEqualTo(Integer value) {
            addCriterion("fkBigRule >=", value, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleLessThan(Integer value) {
            addCriterion("fkBigRule <", value, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleLessThanOrEqualTo(Integer value) {
            addCriterion("fkBigRule <=", value, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleIn(List<Integer> values) {
            addCriterion("fkBigRule in", values, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleNotIn(List<Integer> values) {
            addCriterion("fkBigRule not in", values, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleBetween(Integer value1, Integer value2) {
            addCriterion("fkBigRule between", value1, value2, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFkbigruleNotBetween(Integer value1, Integer value2) {
            addCriterion("fkBigRule not between", value1, value2, "fkbigrule");
            return (Criteria) this;
        }

        public Criteria andFktargetidIsNull() {
            addCriterion("fkTargetId is null");
            return (Criteria) this;
        }

        public Criteria andFktargetidIsNotNull() {
            addCriterion("fkTargetId is not null");
            return (Criteria) this;
        }

        public Criteria andFktargetidEqualTo(Integer value) {
            addCriterion("fkTargetId =", value, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidNotEqualTo(Integer value) {
            addCriterion("fkTargetId <>", value, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidGreaterThan(Integer value) {
            addCriterion("fkTargetId >", value, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidGreaterThanOrEqualTo(Integer value) {
            addCriterion("fkTargetId >=", value, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidLessThan(Integer value) {
            addCriterion("fkTargetId <", value, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidLessThanOrEqualTo(Integer value) {
            addCriterion("fkTargetId <=", value, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidIn(List<Integer> values) {
            addCriterion("fkTargetId in", values, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidNotIn(List<Integer> values) {
            addCriterion("fkTargetId not in", values, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidBetween(Integer value1, Integer value2) {
            addCriterion("fkTargetId between", value1, value2, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andFktargetidNotBetween(Integer value1, Integer value2) {
            addCriterion("fkTargetId not between", value1, value2, "fktargetid");
            return (Criteria) this;
        }

        public Criteria andTypeclassIsNull() {
            addCriterion("typeClass is null");
            return (Criteria) this;
        }

        public Criteria andTypeclassIsNotNull() {
            addCriterion("typeClass is not null");
            return (Criteria) this;
        }

        public Criteria andTypeclassEqualTo(String value) {
            addCriterion("typeClass =", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassNotEqualTo(String value) {
            addCriterion("typeClass <>", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassGreaterThan(String value) {
            addCriterion("typeClass >", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassGreaterThanOrEqualTo(String value) {
            addCriterion("typeClass >=", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassLessThan(String value) {
            addCriterion("typeClass <", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassLessThanOrEqualTo(String value) {
            addCriterion("typeClass <=", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassLike(String value) {
            addCriterion("typeClass like", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassNotLike(String value) {
            addCriterion("typeClass not like", value, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassIn(List<String> values) {
            addCriterion("typeClass in", values, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassNotIn(List<String> values) {
            addCriterion("typeClass not in", values, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassBetween(String value1, String value2) {
            addCriterion("typeClass between", value1, value2, "typeclass");
            return (Criteria) this;
        }

        public Criteria andTypeclassNotBetween(String value1, String value2) {
            addCriterion("typeClass not between", value1, value2, "typeclass");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueIsNull() {
            addCriterion("conditionalValue is null");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueIsNotNull() {
            addCriterion("conditionalValue is not null");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueEqualTo(String value) {
            addCriterion("conditionalValue =", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueNotEqualTo(String value) {
            addCriterion("conditionalValue <>", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueGreaterThan(String value) {
            addCriterion("conditionalValue >", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueGreaterThanOrEqualTo(String value) {
            addCriterion("conditionalValue >=", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueLessThan(String value) {
            addCriterion("conditionalValue <", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueLessThanOrEqualTo(String value) {
            addCriterion("conditionalValue <=", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueLike(String value) {
            addCriterion("conditionalValue like", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueNotLike(String value) {
            addCriterion("conditionalValue not like", value, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueIn(List<String> values) {
            addCriterion("conditionalValue in", values, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueNotIn(List<String> values) {
            addCriterion("conditionalValue not in", values, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueBetween(String value1, String value2) {
            addCriterion("conditionalValue between", value1, value2, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andConditionalvalueNotBetween(String value1, String value2) {
            addCriterion("conditionalValue not between", value1, value2, "conditionalvalue");
            return (Criteria) this;
        }

        public Criteria andSeqIsNull() {
            addCriterion("seq is null");
            return (Criteria) this;
        }

        public Criteria andSeqIsNotNull() {
            addCriterion("seq is not null");
            return (Criteria) this;
        }

        public Criteria andSeqEqualTo(Integer value) {
            addCriterion("seq =", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqNotEqualTo(Integer value) {
            addCriterion("seq <>", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqGreaterThan(Integer value) {
            addCriterion("seq >", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("seq >=", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqLessThan(Integer value) {
            addCriterion("seq <", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqLessThanOrEqualTo(Integer value) {
            addCriterion("seq <=", value, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqIn(List<Integer> values) {
            addCriterion("seq in", values, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqNotIn(List<Integer> values) {
            addCriterion("seq not in", values, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqBetween(Integer value1, Integer value2) {
            addCriterion("seq between", value1, value2, "seq");
            return (Criteria) this;
        }

        public Criteria andSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("seq not between", value1, value2, "seq");
            return (Criteria) this;
        }

        public Criteria andSpacerIsNull() {
            addCriterion("spacer is null");
            return (Criteria) this;
        }

        public Criteria andSpacerIsNotNull() {
            addCriterion("spacer is not null");
            return (Criteria) this;
        }

        public Criteria andSpacerEqualTo(String value) {
            addCriterion("spacer =", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerNotEqualTo(String value) {
            addCriterion("spacer <>", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerGreaterThan(String value) {
            addCriterion("spacer >", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerGreaterThanOrEqualTo(String value) {
            addCriterion("spacer >=", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerLessThan(String value) {
            addCriterion("spacer <", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerLessThanOrEqualTo(String value) {
            addCriterion("spacer <=", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerLike(String value) {
            addCriterion("spacer like", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerNotLike(String value) {
            addCriterion("spacer not like", value, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerIn(List<String> values) {
            addCriterion("spacer in", values, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerNotIn(List<String> values) {
            addCriterion("spacer not in", values, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerBetween(String value1, String value2) {
            addCriterion("spacer between", value1, value2, "spacer");
            return (Criteria) this;
        }

        public Criteria andSpacerNotBetween(String value1, String value2) {
            addCriterion("spacer not between", value1, value2, "spacer");
            return (Criteria) this;
        }

        public Criteria andParamIsNull() {
            addCriterion("param is null");
            return (Criteria) this;
        }

        public Criteria andParamIsNotNull() {
            addCriterion("param is not null");
            return (Criteria) this;
        }

        public Criteria andParamEqualTo(String value) {
            addCriterion("param =", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamNotEqualTo(String value) {
            addCriterion("param <>", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamGreaterThan(String value) {
            addCriterion("param >", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamGreaterThanOrEqualTo(String value) {
            addCriterion("param >=", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamLessThan(String value) {
            addCriterion("param <", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamLessThanOrEqualTo(String value) {
            addCriterion("param <=", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamLike(String value) {
            addCriterion("param like", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamNotLike(String value) {
            addCriterion("param not like", value, "param");
            return (Criteria) this;
        }

        public Criteria andParamIn(List<String> values) {
            addCriterion("param in", values, "param");
            return (Criteria) this;
        }

        public Criteria andParamNotIn(List<String> values) {
            addCriterion("param not in", values, "param");
            return (Criteria) this;
        }

        public Criteria andParamBetween(String value1, String value2) {
            addCriterion("param between", value1, value2, "param");
            return (Criteria) this;
        }

        public Criteria andParamNotBetween(String value1, String value2) {
            addCriterion("param not between", value1, value2, "param");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table code_littlerule
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table code_littlerule
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}